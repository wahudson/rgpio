2017-05-10
		librgpio -- Raspberry Pi GPIO Library
		-------------------------------------

A C++ library to manipulate the Raspberry Pi GPIO peripherals.

Revision control:  git

Files:  (2020-08-30)
------
README			this file

.gitignore		Git ignore transient files

doc/		    Documentation
    architecture.text	Architecture description
    clock_design.text	rgClk - Clock Manager design
    iic_design.text	rgIic - I2C design
    iopin_design.text	rgIoPins - IO Pin Registers Design
    manpage.text	Manpage documentation design
    mem_barrier.text	Memory Barrier notes
    privilege.text	Process Privilege Control
    pwm_design.text	rgPwm - PWM (Pulse Width Modulator) design
    spi0_design.text	rgSpi0 - SPI0 Master design
    timer_design.text	rgSysTimer - System Timer design
    uspi_design.text	rgUniSpi - Universal SPI Master design
    version.text	Version Numbering, Version Log

man/		    Manpage dir tree (unmanaged, not source)
    man3/		Library calls
    man7/		GPIO hardware descriptions

src/		    Source code
    Makefile		for building the tool
    Unused/		Obsolete and other unused code
    man7/		hardware man page source

    rgAddrMap.cpp	Address Map class
    rgAddrMap.h
    rgAddrMap.pod
    rgAltFuncName.cpp	Alternate Function Names class
    rgAltFuncName.h
    rgClk.cpp		Clock Manager enumerated class
    rgClk.h
    rgClk.pod
    rgFselPin.cpp	GPIO Pin Function Select class
    rgFselPin.h
    rgIic.cpp		I2C Master class
    rgIic.h
    rgIoPin.cpp		GPIO IO Pin control class (enum, deprecated)
    rgIoPin.h
    rgIoPin.pod
    rgIoPins.cpp	GPIO IO Pin Registers class (object registers)
    rgIoPins.h
    rgPwm.cpp		PWM Pulse Width Modulator class
    rgPwm.h
    rgRegister.cpp	Register base class
    rgRegister.h
    rgSpi0.cpp		SPI0 Master class
    rgSpi0.h
    rgSysTimer.cpp	System Timer class
    rgSysTimer.h
    rgUniSpi.cpp	Universal SPI Master class - SPI1, SPI2
    rgUniSpi.h
    rgUniSpi.pod
    rgVersion.h		Version Number (inline code) - define here

bin/		    Commands

lib/		    Library
    librgpio.a		The compiled library

obj/		    temporary .o object files
    *.o

test/		    Testing
    README
    Makefile		Run all tests
    t_*/		Test suites
    v_*/		Live RPi validation suites


Initial Build process:
----------------------

Run from the working copy src/ directory:
    # cd .../src
    % make compile
    % make man

The idea is to build/run in the source directory tree, thus avoiding need for
any package/install process.

The bin/ directory aggregates all commands with symlinks (so it does not
contain any sources), making it easy to add to $PATH.

Man pages can be viewed with:
    % man -M ../man  <NAME>

    # Access using rgpio symlinks:
    % rgpio man <SECTION> <NAME>


Primary developers:
-------------------
    William Hudson

