2017-05-10
		rgpio -- Raspberry Pi GPIO Tool
		-------------------------------

This is the "rgpio" command.
Runs on Raspberry Pi (RPi) to read/control the GPIO configuration.

Revision control:  git

Files:  (2018-11-04)
------
README			this file

.gitignore		Git ignore transient files

doc/		    Documentation
    architecture.text	Architecture description

src/		    Source code
    Makefile		for building the tool
    Error.cpp		Error handling
    Error.h
    rgpio.cpp		main program
    rgpio.pod		main program manpage source
    yOpVal.cpp		Option Argument class
    yOpVal.h
    yOption.cpp		Option parsing base class
    yOption.h
    yUtil.cpp		Utility functions.
    yUtil.h
		      rgpio subcommands:
    y_clock.cpp		rgpio clock -- Clock control
    y_clock.h
    y_fsel.cpp		rgpio fsel -- Function Select pins
    y_fsel.h
    y_io.cpp		rgpio io -- IO pins
    y_io.h
    y_uspi.cpp		rgpio uspi -- Universal SPI Master
    y_uspi.h

    man1/	      Manpage source for sub-commands
	rgpio-fsel.pod
	rgpio-io.pod

perf/		    Source code Performance Test Programs
    Makefile		for building programs (output in ../bin)
    clock_perf.cpp	Clock system read/write times.
    uspi_fifo.cpp	Universal SPI fifo performance with process sleeps.
    uspi_trace.cpp	Trace Universal SPI Master operation.

bin/		    Commands
    rgpio		Raspberry Pi GPIO utility
    clock_perf
    uspi_fifo
    uspi_trace

man/		    Manpage dir tree (unmanaged, not source)
    man1/		Commands, and rgpio-subcommands

obj/		    temporary .o object files
    *.o

test/		    Testing
    README
    Makefile		Run all tests
    t_*/		Test suites


Initial Build process:
----------------------

Run from the working copy src/ directory:
    # cd .../src
    % make compile
    % make cap
    % make man

The idea is to build/run in the source directory tree, thus avoiding need for
any package/install process.

The bin/ dirctory aggregates all commands with symlinks (so it does not
contain any sources), making it easy to add to $PATH.

Man pages can be run with:  (#!! need a user friendly access or install)
    % man -M ../man  <NAME>


Primary developers:
-------------------
    William Hudson

