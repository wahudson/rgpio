2017-05-20  William A. Hudson

		rgpio -- Testing
		----------------

Self-checking regression tests.

Files:  (2018-11-09)
------
Makefile	run all test suites
README		this file

.gitignore	Git ignore transient files

bin/		commands for Test

lib/		Test library
    TestLib2.pm		Library for testing programs (perl).

opt/		External command installations (none)

obj/		compiled .o from src/
src/		test library source code
    Makefile		compile unit test library
    utLib1.cpp		library code
    utLib1.h		user interface, #define

t_*/		Generic test suite contents
    Makefile		run/compile the test
    ref/		reference input/output of the test
    test.cpp		test program (C++)
    test.exe		compiled test (may be removed)
    test.pl		test program (perl)
    tmp/		where the test program is executed, removed each time


Test suites:  (2018-11-09)
------------
?       = not committed
  b     = uses bin/
   l    = uses lib/
    o   = uses opt/  (indirectly thru bin/)
     s  = uses src/
 u      = Unit test (C++)        utLib1.cpp
 m      = Module test (perl)     TestLib1.pm
 p      = Program test (command)
------  --------------
 u   s  t_Error/	Error		Error message class.
 u   s  t_yUtil/	yUtil		Utility functions.
 pbl    t_rgpio/	rgpio		rgpio main program.


Test Setup:
-----------
    The individual test  t_*/Makefile  has dependency on the test framework,
    but will not rebuild the test framework.

    Build the test framework in src/ (only needed when it changes):
    % cd  src/
    % make


Run Tests:
----------
    # Run all tests from this directory
    % make test

    # Run a specific test
    % cd t_<dir>/
    % make test

Environment variable 'TESTONRPI' switch in some tests.
    # When running on an RPi
    % TESTONRPI=1  make test

    # When on another platform
    % make test


Strategy:
---------
    Program testing - test.pl
    The idea is to stimulate the program under test with options and input,
    capture the output, and compare against known good output.

    Makefile is the common interface to all test suits, regardless of the
    kind of test.


Git:
----
    The .gitignore file has entries to ignore the transient files in each
    test directory:
    t_*/test.exe
    t_*/tmp


Issues:
-------

