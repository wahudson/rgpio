2017-05-20  William A. Hudson

		rgpio -- Testing
		----------------

Self-checking regression tests.

Files:  (2021-01-26)
------
Makefile	run all test suites
README		this file
Unused/		Obsolete and other unused code

.gitignore	Git ignore transient files

bin/		commands for Test
    rgpio -> ../../bin/rgpio	main command under test
    rpi_BaseAddr	test helper command (local compile)

lib/		Test library
    TestLib2.pm		Library for testing programs (perl).

librgpio/ ->	Library (for helper commands)

obj/		compiled .o from src/

src/		test library source code
    Makefile		compile unit test library and Test tools
    utLib1.cpp		test framework library
    utLib1.h		    user interface, #define
    rpi_BaseAddr.cpp	test helper command - output BaseAddr in hex

t_*/		Generic test suite contents
    Makefile		run/compile the test
    ref/		reference input/output of the test
    test.cpp		test program (C++)
    test.exe		compiled test (may be removed)
    test.pl		test program (perl)
    tmp/		where the test program is executed, removed each time


Test suites:  (2024-09-24)
------------
?       = not committed
  b     = uses bin/
   l    = uses lib/
     s  = uses src/
 u      = Unit test (C++)        utLib1.cpp
 m      = Module test (perl)     TestLib2.pm
 p      = Program test (command)
------  --------------
 u   s  t_Error/	Error		Error message class.
 pbl    t_clk/		rgpio-clk	subcommand
 pbl    t_fsel/		rgpio-fsel	subcommand
 pbl    t_fsel5/	rgpio-fsel5	subcommand RPi5
 pbl    t_header/	rgpio-header	subcommand
 pbl    t_iic/		rgpio-iic	subcommand
 pbl    t_info/		rgpio-info	subcommand
 pbl    t_io/		rgpio-io	subcommand
 pbl    t_pads/		rgpio-pads	subcommand
 pbl    t_pud/		rgpio-pud	subcommand
 pbl    t_pull/		rgpio-pull	subcommand
 pbl    t_pwm/		rgpio-pwm	subcommand
 pbl    t_rcon/		rgpio-rcon	subcommand RPi5
 pbl    t_rgpio/	rgpio		rgpio main program.
 pbl    t_rio/		rgpio-rio	subcommand RPi5
 pbl    t_rpad/		rgpio-rpad	subcommand RPi5
 pbl    t_spi0/		rgpio-spi0	subcommand
 pbl    t_uspi/		rgpio-uspi	subcommand
 u   s  t_yOpVal/	yOpVal		Option Argument class
 u   s  t_yUtil/	yUtil		Utility functions.


t_*/    Test code functionality.
	    Can run on RPi or Linux platform.
	    Generally should NOT depend on hardware, i.e.
	    use "rgpio --dev=f" fake memory.

v_*/    Validate RPi hardware behavior.
	    Run on RPi only, other Linux will fail.
	    Each test may require special hardware setup.  See test.cpp


Test Setup:
-----------
    The individual test  t_*/Makefile  has dependency on the test framework,
    but will not rebuild the test framework.

    Build the test framework and helper tools:
    % cd  src/
    % make

    Note:  rpi_BaseAddr depends on librgpio rgRpiRev.

    Tests do NOT rebuild the object being tested (or the framework).
    This way the object under test does not change due to testing.
    #!! Perhaps they should rebuild the framework?

Run Tests:
----------
    # Run all tests from this directory.  Also build test framework.
    % make test

    # Run a specific test
    % cd t_<dir>/
    % make test

    Pass if output numbered lines show "OK", fail if "NOT OK".

    Note:  Some tests depend on the version of RPi being run (e.g. t_rgpio/).
    Helper commands (e.g. bin/rpi_BaseAddr) provide an RPi version dependent
    mechanism to alter test behavior.
    Such tests should use words with prefix "TEST" to help highlight where
    this occurs (is a pattern to grep for).

    Previously (before 2021-01-26) an environment variable 'TESTONRPI' was
    used to similar effect, but managing environment was problematic.

Strategy:
---------
    Program testing - test.pl
    The idea is to stimulate the program under test with options and input,
    capture the output, and compare against known good output.

    Makefile is the common interface to all test suits, regardless of the
    kind of test.

    Tests should take care not to modify hardware that is in use by the
    operating system, i.e. be safe to run on RPi.

Git:
----
    The .gitignore file has entries to ignore the transient files in each
    test directory:
    t_*/test.exe
    t_*/tmp


Issues:
-------

